<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="8" hostname="DESKTOP-V7K5OR1" failures="0" tests="7" name="Manage Stocks : Sell Stocks in Portfolio 1" time="0.05" errors="0" timestamp="2025-05-28T22:26:56 IST">
  <testcase classname="testbase.BaseTest" name="@BeforeTest beforeTest" time="0.034">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;String.equalsIgnoreCase(String)&amp;quot; because &amp;quot;runMode&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "String.equalsIgnoreCase(String)" because "runMode" is null
at testbase.BaseTest.beforeTest(BaseTest.java:69)
at runner.TestNGRunner.run(TestNGRunner.java:32)
at runner.JSONRunner.main(JSONRunner.java:146)
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416111E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416111E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416111E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416111E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416125E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.748451416127E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.748451416127E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterTest afterTest" time="-1.748451416127E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testCases.SessionTest" name="openUp" time="0.0">
    <skipped/>
  </testcase> <!-- openUp -->
  <testcase classname="testCases.SessionTest" name="doLogin" time="0.0">
    <skipped/>
  </testcase> <!-- doLogin -->
  <testcase classname="testCases.PortfolioTest" name="selectPortfolio" time="0.0">
    <skipped/>
  </testcase> <!-- selectPortfolio -->
  <testcase classname="testCases.StockTest" name="verifyStockIsPresent" time="0.0">
    <skipped/>
  </testcase> <!-- verifyStockIsPresent -->
  <testcase classname="testCases.StockTest" name="modifyStock" time="0.0">
    <skipped/>
  </testcase> <!-- modifyStock -->
  <testcase classname="testCases.StockTest" name="verifyStockQuantity" time="0.0">
    <skipped/>
  </testcase> <!-- verifyStockQuantity -->
  <testcase classname="testCases.StockTest" name="verifyTransactionHistory" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTransactionHistory -->
  <testcase classname="testbase.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testbase.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testCases.PortfolioTest" name="createPortfolio" time="0.0">
    <ignored/>
  </testcase> <!-- createPortfolio -->
  <testcase classname="testCases.StockTest" name="addStock" time="0.0">
    <ignored/>
  </testcase> <!-- addStock -->
  <testcase classname="testCases.SessionTest" name="doLogout" time="0.0">
    <ignored/>
  </testcase> <!-- doLogout -->
  <testcase classname="testbase.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testbase.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testCases.PortfolioTest" name="deletePortfolio" time="0.0">
    <ignored/>
  </testcase> <!-- deletePortfolio -->
</testsuite> <!-- Manage Stocks : Sell Stocks in Portfolio 1 -->
