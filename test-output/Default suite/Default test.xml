<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-V7K5OR1" failures="0" tests="3" name="Default test" time="1.01" errors="0" timestamp="2025-06-15T11:36:24 IST">
  <testcase classname="testbase.BaseTest" name="@BeforeTest beforeTest" time="0.955">
    <failure type="java.lang.NumberFormatException" message="Cannot parse null string">
      <![CDATA[java.lang.NumberFormatException: Cannot parse null string
at java.base/java.lang.Integer.parseInt(Integer.java:630)
at java.base/java.lang.Integer.parseInt(Integer.java:786)
at testbase.BaseTest.beforeTest(BaseTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.749967583998E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.749967584006E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.749967584008E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.749967584013E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@BeforeMethod beforeMethod" time="-1.749967584014E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterMethod afterMethod" time="-1.749967584017E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testbase.BaseTest" name="@AfterTest afterTest" time="-1.749967584021E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testCases.PortfolioTest" name="createPortfolio" time="0.0">
    <skipped/>
  </testcase> <!-- createPortfolio -->
  <testcase classname="testCases.PortfolioTest" name="deletePortfolio" time="0.0">
    <skipped/>
  </testcase> <!-- deletePortfolio -->
  <testcase classname="testCases.PortfolioTest" name="selectPortfolio" time="0.0">
    <skipped/>
  </testcase> <!-- selectPortfolio -->
</testsuite> <!-- Default test -->
